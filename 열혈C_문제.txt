 Chapter10
248p

_도전 1
10진수 정수를 입력 받아서 16진수로 출력하는 프로그램을 작성해 보자. 
이는 서식문자의 활용에 대한 문제이므로
쉽게 해결할 수 있을 것이다.


_도전 2
프로그램 사용자로부터 두 개의 정수를 입력 받아서 구구단을 출력하는 프로그램을 작성해 보자.
예를 들어서 프로그램 사용자가 3과 5를 입력하면 3단, 4단, 5단이 출력되어야 하고, 2와 4를
입력하면 2단, 3단, 4단이 출력되어야 한다.
단 한가지 조건이 있다. 사용자는 두 개의 숫자를 입력 할 때에 입력 순서에 자유로워야 한다. 즉
3과 5를 입력하건 5와 3을 입력하건 프로그램은 같은 결과를 출력해야 한다.

//도전 2의 해결을 위한 GUIDE
두 개의 정수를 인자로 전달받아서 두 수 사이의 구구단을 출력하는 메소드를 정의하고, main 함수에서 
이 함수를 출력하는 형태로 구현해보자


_도전 3
두 개의 정수를 입력 받아서 최대 공약수(GCD)를 구하는 프로그램을 작성 해 보자.

//실행의 예
두 개의 정수 입력: 6 9
두 수의 최대 공약수: 3

//도전3의 해결을 위한 GUIDE
정수 num1과 num2의 최대 공약수는 num1이나 num2보다 클 수 없다. 그리고 num1과 num2의
최대 공약수로 num1 또는 num2를 나누면 나머지가 0이 된다. 이 두 가지 특성을 이용하면 최대 공약
수를 쉽게 구할 수 있다. 참고로 여유가 된다면 인터넷에서 '유클리드 호제법'이라는 것을 조사해보자.
그리고 이를 기반으로 문제의 해결을 한번 더 시도하기 바란다.


_도전 4
필자가 좋아하는 것 중 하나가 금요일 저녁 퇴근길에 DVD나 만화책을 잔뜩 빌리고, 동네 슈퍼에 
들려서 군것질거리를 사가지고 집에 들어가는 것이다. 오늘을 금요일이다. 현재 필자의 주머니에는
5천원이 있다. DVD 한편을 빌리면 3,500이 남는다. 슈퍼에 들려서 크림빵(500원), 새우깡(700원),
콜라(400원)를 사려한다. 잔돈을 하나도 남기지 않고 이 세가지 물건을 하나 이상 반드시 구매하려면
어떻게 구매를 진행해야 하겠는가? 물론 여기에는 여러 가지 경우의 수가 있을 것이다.
필자가 어떠한 선택을 할 수 있는지 여러분이 제시해 주기 바란다.

//실행의 예
현재 당신이 소유하고 있는 금액 :3500
크림빵 1개, 새우깡 2개, 콜 라 4개
크림빵 2개, 새우깡 3개, 콜 라 1개
크림빵 4개, 새우깡 1개, 콜 라 2개
어떻게 구입하시겠습니까?


_도전 5
10개의 소수(Prime Number)를 출력하는 프로그램을 작성해 보자. 참고로 정수 num이 1과
num으로 밖에 나눠지지 않는다면 이는 소수에 해당한다. 따라서 3은 소수이다. 그러나 4는 소
수가 아니다. 1, 2, 4로 나눠지기 때문이다.

2 3 5 7 11 13 17 19 23 29


_도전 6
프로그램 사용자로부터 초(second)를 입력 받은 후에, 이를 [시, 분, 초]의 형태로 출력하는 프로그램
을 작성해 보자.

//실행의 예
초(second) 입력 : 3615
[h:1, m:0, s:15]


_도전 7
프로그램 사용자로부터 숫자 n을 입력 받는다. 그리고 나서 다음 공식이 성립하는 k의 최댓값을 
계산해서 출력하는 프로그램을 작성해 보자.  2제곱 <= n

//실행의 예
상수 n 입력: 256;
공식을 만족하는 k의 최댓값은 8

//도전7의 해결을 위한 GUIDE
수식이 등장했다고 해서 두려워하지 말자. 위의 식을 그대로 반복문으로 옮겨 놓으면 쉽게 해결되는 문제이다.


_도전 8
2의 n승을 구하는 함수를 재귀적으로 구현해 보자. 
그리고 그에 따른 적절한 main함수도 구현해 보자.
참고로 재귀함수의 구현이 처음에는 어려운 편이기 때문에 여기서는 쉬운 문제를 제시하였다.

//실행의 예
정수 입력 : 8
2의 8승은 256


Chapter11 260p

11-1
문제 1
길이가 5인 int형 배열을 선언해서 프로그램 사용자로부터 총 5개의 정수를 입력 받자! 
그리고 입력이 끝나면 다음의 내용을 출력하도록 예제를 작성해보자.
⊙입력된 정수 중에서 최댓값
⊙입력된 정수 중에서 최솟값
⊙입력된 정수의 총 합

단, 반드시 입력을 완료한 상태에서 '최댓값'과 '최솟값' 그리고 '총 합'을 계산해야 한다.

//array = Enumerable.Repeat('S', 1000).ToArray(); // 배열의 값을 'S'로 초기화



11-02    268p

문제 2
프로그램 사용자로부터 영단어를 입력 받아서 char형 배열에 저장한다. 그 다음 배열에 저장된 영단어를
역순으로 뒤집습니다. 물론 이 때에 널 문자의 위치를 변경해서는 안 된다. 뒤집고 나서는 제대로
뒤집혔는지를 확인하기 위해서 출력해보자.

문제 3
프로그램 사용자로부터 영단어를 입력 받는다. 그리고 나서 입력 받은 영단어를 구성하는 문자 중에서
아스키 코드의 값이 가장 큰 문자를 찾아서 출력하는 프로그램을 작성해보자. 예를 들어서 입력된
영단어가 "LOVE"라면 이 중에서 아스키 코드 값이 가장 큰 문자는 V이므로 V가 출력되어야 한다.

13-1 299p
문제 1 ardent_13_01_01
길이가 5인 int형 배열 arr을 선언하고 이를 1, 2, 3, 4, 5로 초기화한 다음, 이 배열의 첫 번째
요소를 가리키는 변수 ptr을 선언한다. 그 다음 변수 ptr에 저장된 값을 증가시키는
형태의 연산을 기반으로 배열 요소에 접근하면서 모든 배열요소의 값을 2씩 증가시키고,
정상적으로 증가가 이뤄졌는지 예제를 작성해보자.


문제 2
문제 1에서는 포인터 변수 ptr에 저장된 값을 변경시켜가면서 배열요소에 접근하라고 하였다.
그런데 이번에는 변수 ptr에 저장된 값을 변경시키지 않고, ptr을 대상으로 덧셈연산을 하여,
그 결과로 반환되는 주소 값을 통해서 모든 배열요소에 접근하여 값을 2씩 증가시키는
예제를 작성해보자.
//배열의 깊은 복사  ptr =  (int[])arr.Clone(); 
//  배열이름A.CopyTo(배열이름B, 2);


문제 3
길이가 5인 int형 배열 arr을 선언하고 이를 1, 2, 3, 4, 5로 초기화한 다음, 이 배열의 마지막
요소를 가리키는 변수 ptr을 선언한다. 그 다음 변수 ptr에 저장된 값을 감소시키는 
형태의 연산을 기반으로 모든 배열요소에 접근하여, 배열에 저장된 모든 정수를 더하여 
그 결과를 출력하는 프로그램을 작성해보자.
//책보기

문제 4
길이가 6인 int형 배열arr을 선언하고 이를 1, 2, 3, 4, 5, 6으로 초기화한 다음, 배열에 저장된
값의 순서가 6, 5, 4, 3, 2, 1이 되도록 변경하는 예제를 작성해보자. 단, 배열의 앞과 뒤를
가리키는 변수 두 개를 선언해서 이를 활용하여 저장된 값의 순서를 뒤바꿔야 한다.


15 도전 프로그래밍
도전 1
길이가 10인 배열을 선언하고 총 10개의 정수를 입력 받아서, 홀수와 짝수를 구분 지어 출력하는 
프로그램을 작성해 보자. 일단 홀수부터 출력하고 나서 짝수를 출력하도록 하자. 단, 10개의 정수는
main 함수 내에서 입력 받도록 하고, 배열 내에 존재하는 홀수만 출력하는 함수와 배열 내에
존재하는 짝수만 출력하는 함수를 각각 정의해서 이 두 함수를 호출하는 방식으로 프로그램을 
완성하자.

실행의 예
총 10개의 숫자 입력
입력: 0~9
홀수 출력: 1, 3, 5, 7, 9
짝수 출력: 2, 4, 6, 8, 0


도전 2
프로그램 사용자로부터 10진수 형태로 정수를 하나 입력 받은 다음, 이를 2진수로 변환해서 출력
하는 프로그램을 작성해 보자.

실행의 예
10진수 정수 입력: 12
1100

도전2의 해결을 위한 GUIDE
10진수를 2진수로 변환하는 방법을 모른다면, 먼저 그 방법부터 공부해야 한다.


도전 3
길이가 10인 배열을 선언하고 총 10개의 정수를 입력 받는다. 단, 입력 받은 숫자가 홀수이면 배열의
앞에서부터 채워나가고, 짝수이면 뒤에서부터 채워나가는 형식을 취하기로 하자. 따라서
사용자가 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]을 입력했다면, 배열에는 [1, 3, 5, 7, 9, 10, 8, 6, 4, 2]의 순으로
저장이 되어야 한다.

실행의 예
총 10개의 숫자 입력
입력:
배열의 요소 출력 : 1133224444


도전4
회문(Palindrome)은 앞으로 읽으나 뒤로 읽으나 차이가 없는 단어들을 뜻한다. 예를 들어서 
level, bob과 같은 단어들은 회문에 속한다. 이에 우리는 인자로 전달되는 영단어가 회문인지
아닌지를 판단해서 그 결과를 출력하는 기능의 함수를 정의하고 이에 적절한 main 함수를 정의해
보고자 한다. 단 구현의 편의를 위해서 대소문자까지 일치해야 회문으로 인정하기로 하겠다.(이는
어디까지나 구현의 편의를 고려한 제약사항일 뿐이다).

실행의 예
문자열 입력: noon
회문 입니다.

//stirng voca = Array.Reverse(voca); 문자열 뒤집기
// string a.Equals(b, stringComparison.OrdinallgnoreCase);
//if(string.Compare(a, b, true) ==0 )//대소문자 무시
//if(string.Compare(a, b, false) ==0 )//대소문자 판별
//ToUpper, ToLower를 사용하여 문자를 대문자, 소문자로 변경
//var1.ToUpper();
//var1.ToLower();
//Trim을 사용하여 문자열의 공백을 제거
//val1.Trim();
//Array.Reverse 는 대소문자 구별 안된다. char배열은 다 쓸데 없고, 단순하게 조건문과 반복문으로 쉽게 구별할 수 있다.


도전4의 해결을 위한 GUIDE
입력된 문자열의 길이를 알아야 회문인지 아닌지를 판단할 수 있다. 따라서 문제의 해결을 위해서는
문자열의 길이를 계산해서 반환하는 함수도 정의해야 한다. 참고로 이러한 기능의 함수가 표준함수
로 존재한다. 헤더파일 string.h에 선어되어 있는 strlen이란 이름의 함수이다. 이 함수에 대해서는 
Chapter 21에서 소개한다.


도전5 330p

Type 1
1차월배열 arr={3,2,4,1}의 버블 정렬 오름차순으로 출력하기
메소드의 이름은 BubbleSort로 정의

Type 2
배열에 저장되어 있는 요소들을 내림차순으로 정렬하는 메소드를 정의하자
(메소드의 이름은 DesSort로 정의하자). 그리고 이 함수를 호출하는 예제를 작성해보자.
프로그램의 흐름은 다음과 같이 구성을 하자. 일단 길이가 7인 int형 배열을 선언해서 프로그램
사용자로부터 7개의 정수를 입력 받도록 하자. 그리고 입력 받은 정수를 내림차순으로 정렬하기
위해서, 배열을 인자로 전달하면서 DesSort 함수를 호출하자. 그리고 마지막으로 제대로 정렬이
되었는지 확인하기 위해서 배열의 요소들을 순서대로 출력해보자.

349p,355p
Chapter16 다차원 배열
문제1 단순하니 생략

문제2
아래 그림과 관련해서 문제를 제시할 테니, 그림에서 제시하는 배열A와 배열B를 유심히 관찰하자.

{1234}	-> {1 5}
{5678}	    {2 6}
배열 A	    {3 7}
	    {4 8}
	    배열 B
위 그림의 형태로  배열 A와 배열 B를 선언하자. 그리고 배열 A는 선언과 동시에 그림에서 명시하는
대로 초기화를 진행하자! 그리고 배열 B도 위 그림에서 보이는 대로 초기화를 진행화되, 반드시
배열 A에 저장된 값을 이용해서 초기화를 진행해야 한다.


문제3
성적관리 프로그램을 작성하자. 과목은 국어, 영어, 수학, 국사 이렇게 네 과목이고 학생은 철희, 철수
, 영희, 영수 이렇게 네 사람이다. 프로그램 사용자로부터 이 네 사람의 네 과목 점수를 입력 받는다.
그리고 미리 선언해 놓은 배열에 다음의 형태로 그 값을 저장해야 한다.

	국어 영어 수학 국사 총점
철희	5      4      6     5  
철수	3      6	   9     3
영희 	4      8      2     7
영수	3      8	   9     7
과목별 총점
저장이 끝났다면, 개인별 총점과 과목별 총점을 계산해서 다음 그림에서 보이는 배열의 위치에 저장해
야 한다. 그리고 마지막에는 저장된 값의 검증을 위한 출력을 보여야 한다.

Chapter20 도전! 프로그래밍3
406p
이미지가 많으니 서적 참조

도전1 ~ 도전6

도전3 임의의 난수 생성
c#에서 임의의 난수는 Random 클래스의 Next() 메소드를 사용하여 생성할 수 있습니다.
Random randomojb = new Random();
int rendomValue = randomObj.Next();   //Next(최솟값, 최대값),(최대값)
NextDouble();과 NextBytes()도 존재함

도전 4 생략
Rnadom.Next()는 패턴이 없는거 같다.